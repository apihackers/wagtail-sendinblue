# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-31 08:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import sendinblue.forms
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailembeds.blocks
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
    ]

    operations = [
        migrations.CreateModel(
            name='SendInBlueForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('definition', wagtail.wagtailcore.fields.StreamField((('text_field', wagtail.wagtailcore.blocks.StructBlock((('label', wagtail.wagtailcore.blocks.CharBlock(help_text='The text displayed aside the field', label='Label', max_length=255)), ('required', wagtail.wagtailcore.blocks.BooleanBlock(default=True, label='Required')), ('attribute', sendinblue.forms.SendInBlueAttributeBlock(required=True)), ('placeholder', wagtail.wagtailcore.blocks.CharBlock(help_text='The text displayed inside the field when empty', label='Placeholder', max_length=255, required=False))))), ('text', wagtail.wagtailcore.blocks.RichTextBlock()), ('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('html', wagtail.wagtailcore.blocks.RawHTMLBlock()), ('embed', wagtail.wagtailembeds.blocks.EmbedBlock())))),
                ('submit_text', models.CharField(blank=True, default='Submit', help_text='The submit button text', max_length=128, null=True, verbose_name='Button text')),
                ('submit_layout', models.CharField(blank=True, choices=[('default', 'Default'), ('center', 'Centered'), ('full', 'Full width')], default='default', help_text='The submit button layout', max_length=8, null=True, verbose_name='Button layout')),
                ('submit_variant', models.CharField(blank=True, choices=[('default', 'Default'), ('primary', 'Primary'), ('success', 'Success'), ('info', 'Info'), ('warning', 'Warning'), ('danger', 'Danger'), ('link', 'Link')], default='default', help_text='The submit button tint', max_length=8, null=True, verbose_name='Button variant')),
                ('target_list', models.IntegerField(blank=True, help_text='Add the contact to the given list on form submission', null=True, verbose_name='Target list')),
                ('send_event', models.CharField(blank=True, help_text='Send a custom event on form submission (requires automation)', max_length=255, null=True, verbose_name='Send event')),
                ('thankyou_title', models.CharField(default='Thank you', help_text='Title text to use for the "thank you" page', max_length=255, verbose_name='Thank you title')),
                ('thankyou_text', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='The text to use for the "thank you" page', verbose_name='Thank you text')),
            ],
            options={
                'verbose_name_plural': 'SendInBlue Forms',
                'verbose_name': 'SendInBlue Form',
            },
        ),
        migrations.CreateModel(
            name='SendinBlueSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apikey', models.CharField(blank=True, help_text='Vous pouvez retrouver votre clé d\'API SendInBlue <a target="_blank" href="https://account.sendinblue.com/advanced/api">ici</a>', max_length=255, null=True, verbose_name='API Key')),
                ('automation', models.CharField(blank=True, help_text='Vous pouvez retrouver votre clé d\'API Automation SendInBlue <a target="_blank" href="https://automation.sendinblue.com/parameters">ici</a>', max_length=255, null=True, verbose_name='Automation API Key')),
                ('track_users', models.BooleanField(default=True, help_text='Identify users to SendInBlue to provide deeper automation', verbose_name='Enable user tracking')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'verbose_name': 'SendInBlue',
            },
        ),
    ]
